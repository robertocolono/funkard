// prisma/schema.prisma
datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  handle    String
  rating    Float?    @default(0)
  country   String?
  products  Product[]
  createdAt DateTime  @default(now())
}

model Product {
  id           String       @id @default(cuid())
  title        String       // Nome o titolo principale (es. "Charizard ex 151")
  type         ProductType  // SINGLE, BOX, ETB, ecc.
  tcg          String       // Pokémon, One Piece, Magic, ecc.
  setName      String?      // Nome dell'espansione o set
  releaseYear  Int?         // Anno di uscita
  rarity       String?      // Ultra Rare, Secret Rare, ecc.
  edition      String?      // 1st Edition, Alternate Art, Promo
  isSealed     Boolean      // true se sigillato
  condition    Condition?   // MINT, NEAR_MINT, ecc.
  priceEUR     Int          // prezzo in centesimi (€12.99 = 1299)
  quantity     Int          // unità disponibili (es. 1 per singole)
  imageUrl     String       // link immagine principale
  description  String?      // testo scritto dal venditore
  metadata     Json?        // dati extra variabili per tipo (es. boosterCount, accessories)
  sellerId     String
  seller       User         @relation(fields: [sellerId], references: [id])
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  @@index([type, priceEUR])
  @@index([tcg, setName])
}

enum ProductType {
  SINGLE       // carta singola
  BOOSTER      // pacchetto
  BOX          // booster box
  ETB          // elite trainer box
  TIN          // latta
  DECK         // mazzo
  COLLECTION   // lotto o set multiplo
  ACCESSORY    // accessorio (sleeves, binder, playmat, ecc.)
  PROMO        // carta promozionale
}

enum Condition {
  MINT
  NEAR_MINT
  LIGHT_PLAYED
  PLAYED
  POOR
}